$date
	Sun Apr 28 14:12:49 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_nm_bit_multiplier $end
$var wire 15 ! sum [14:0] $end
$var wire 1 " carry $end
$var reg 8 # b [7:0] $end
$var reg 8 $ d [7:0] $end
$var reg 8 % u [7:0] $end
$var reg 8 & x [7:0] $end
$scope module nm1 $end
$var wire 1 " carry $end
$var wire 8 ' d [7:0] $end
$var wire 8 ( u [7:0] $end
$var wire 8 ) x [7:0] $end
$var wire 8 * y [7:0] $end
$var wire 15 + sum [14:0] $end
$scope begin genblk1[0] $end
$scope module i_nbit_input $end
$var wire 1 , b $end
$var wire 1 - carry $end
$var wire 1 . d $end
$var wire 8 / u [7:0] $end
$var wire 8 0 x [7:0] $end
$var wire 8 1 sum [7:0] $end
$scope begin genblk1[0] $end
$scope module i_multipliter $end
$var wire 1 2 u $end
$var wire 1 3 v $end
$var wire 1 4 x $end
$var wire 1 , y $end
$var wire 1 5 sum $end
$var wire 1 6 carry $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module i_multipliter $end
$var wire 1 7 u $end
$var wire 1 6 v $end
$var wire 1 8 x $end
$var wire 1 , y $end
$var wire 1 9 sum $end
$var wire 1 : carry $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module i_multipliter $end
$var wire 1 ; u $end
$var wire 1 : v $end
$var wire 1 < x $end
$var wire 1 , y $end
$var wire 1 = sum $end
$var wire 1 > carry $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module i_multipliter $end
$var wire 1 ? u $end
$var wire 1 > v $end
$var wire 1 @ x $end
$var wire 1 , y $end
$var wire 1 A sum $end
$var wire 1 B carry $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module i_multipliter $end
$var wire 1 C u $end
$var wire 1 B v $end
$var wire 1 D x $end
$var wire 1 , y $end
$var wire 1 E sum $end
$var wire 1 F carry $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module i_multipliter $end
$var wire 1 G u $end
$var wire 1 F v $end
$var wire 1 H x $end
$var wire 1 , y $end
$var wire 1 I sum $end
$var wire 1 J carry $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module i_multipliter $end
$var wire 1 K u $end
$var wire 1 J v $end
$var wire 1 L x $end
$var wire 1 , y $end
$var wire 1 M sum $end
$var wire 1 N carry $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module i_multipliter $end
$var wire 1 O u $end
$var wire 1 N v $end
$var wire 1 P x $end
$var wire 1 , y $end
$var wire 1 Q sum $end
$var wire 1 R carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module i_nbit_input $end
$var wire 1 S b $end
$var wire 1 T carry $end
$var wire 1 U d $end
$var wire 8 V u [7:0] $end
$var wire 8 W x [7:0] $end
$var wire 8 X sum [7:0] $end
$scope begin genblk1[0] $end
$scope module i_multipliter $end
$var wire 1 Y u $end
$var wire 1 Z v $end
$var wire 1 [ x $end
$var wire 1 S y $end
$var wire 1 \ sum $end
$var wire 1 ] carry $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module i_multipliter $end
$var wire 1 ^ u $end
$var wire 1 ] v $end
$var wire 1 _ x $end
$var wire 1 S y $end
$var wire 1 ` sum $end
$var wire 1 a carry $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module i_multipliter $end
$var wire 1 b u $end
$var wire 1 a v $end
$var wire 1 c x $end
$var wire 1 S y $end
$var wire 1 d sum $end
$var wire 1 e carry $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module i_multipliter $end
$var wire 1 f u $end
$var wire 1 e v $end
$var wire 1 g x $end
$var wire 1 S y $end
$var wire 1 h sum $end
$var wire 1 i carry $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module i_multipliter $end
$var wire 1 j u $end
$var wire 1 i v $end
$var wire 1 k x $end
$var wire 1 S y $end
$var wire 1 l sum $end
$var wire 1 m carry $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module i_multipliter $end
$var wire 1 n u $end
$var wire 1 m v $end
$var wire 1 o x $end
$var wire 1 S y $end
$var wire 1 p sum $end
$var wire 1 q carry $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module i_multipliter $end
$var wire 1 r u $end
$var wire 1 q v $end
$var wire 1 s x $end
$var wire 1 S y $end
$var wire 1 t sum $end
$var wire 1 u carry $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module i_multipliter $end
$var wire 1 v u $end
$var wire 1 u v $end
$var wire 1 w x $end
$var wire 1 S y $end
$var wire 1 x sum $end
$var wire 1 y carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module i_nbit_input $end
$var wire 1 z b $end
$var wire 1 { carry $end
$var wire 1 | d $end
$var wire 8 } u [7:0] $end
$var wire 8 ~ x [7:0] $end
$var wire 8 !" sum [7:0] $end
$scope begin genblk1[0] $end
$scope module i_multipliter $end
$var wire 1 "" u $end
$var wire 1 #" v $end
$var wire 1 $" x $end
$var wire 1 z y $end
$var wire 1 %" sum $end
$var wire 1 &" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module i_multipliter $end
$var wire 1 '" u $end
$var wire 1 &" v $end
$var wire 1 (" x $end
$var wire 1 z y $end
$var wire 1 )" sum $end
$var wire 1 *" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module i_multipliter $end
$var wire 1 +" u $end
$var wire 1 *" v $end
$var wire 1 ," x $end
$var wire 1 z y $end
$var wire 1 -" sum $end
$var wire 1 ." carry $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module i_multipliter $end
$var wire 1 /" u $end
$var wire 1 ." v $end
$var wire 1 0" x $end
$var wire 1 z y $end
$var wire 1 1" sum $end
$var wire 1 2" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module i_multipliter $end
$var wire 1 3" u $end
$var wire 1 2" v $end
$var wire 1 4" x $end
$var wire 1 z y $end
$var wire 1 5" sum $end
$var wire 1 6" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module i_multipliter $end
$var wire 1 7" u $end
$var wire 1 6" v $end
$var wire 1 8" x $end
$var wire 1 z y $end
$var wire 1 9" sum $end
$var wire 1 :" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module i_multipliter $end
$var wire 1 ;" u $end
$var wire 1 :" v $end
$var wire 1 <" x $end
$var wire 1 z y $end
$var wire 1 =" sum $end
$var wire 1 >" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module i_multipliter $end
$var wire 1 ?" u $end
$var wire 1 >" v $end
$var wire 1 @" x $end
$var wire 1 z y $end
$var wire 1 A" sum $end
$var wire 1 B" carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module i_nbit_input $end
$var wire 1 C" b $end
$var wire 1 D" carry $end
$var wire 1 E" d $end
$var wire 8 F" u [7:0] $end
$var wire 8 G" x [7:0] $end
$var wire 8 H" sum [7:0] $end
$scope begin genblk1[0] $end
$scope module i_multipliter $end
$var wire 1 I" u $end
$var wire 1 J" v $end
$var wire 1 K" x $end
$var wire 1 C" y $end
$var wire 1 L" sum $end
$var wire 1 M" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module i_multipliter $end
$var wire 1 N" u $end
$var wire 1 M" v $end
$var wire 1 O" x $end
$var wire 1 C" y $end
$var wire 1 P" sum $end
$var wire 1 Q" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module i_multipliter $end
$var wire 1 R" u $end
$var wire 1 Q" v $end
$var wire 1 S" x $end
$var wire 1 C" y $end
$var wire 1 T" sum $end
$var wire 1 U" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module i_multipliter $end
$var wire 1 V" u $end
$var wire 1 U" v $end
$var wire 1 W" x $end
$var wire 1 C" y $end
$var wire 1 X" sum $end
$var wire 1 Y" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module i_multipliter $end
$var wire 1 Z" u $end
$var wire 1 Y" v $end
$var wire 1 [" x $end
$var wire 1 C" y $end
$var wire 1 \" sum $end
$var wire 1 ]" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module i_multipliter $end
$var wire 1 ^" u $end
$var wire 1 ]" v $end
$var wire 1 _" x $end
$var wire 1 C" y $end
$var wire 1 `" sum $end
$var wire 1 a" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module i_multipliter $end
$var wire 1 b" u $end
$var wire 1 a" v $end
$var wire 1 c" x $end
$var wire 1 C" y $end
$var wire 1 d" sum $end
$var wire 1 e" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module i_multipliter $end
$var wire 1 f" u $end
$var wire 1 e" v $end
$var wire 1 g" x $end
$var wire 1 C" y $end
$var wire 1 h" sum $end
$var wire 1 i" carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module i_nbit_input $end
$var wire 1 j" b $end
$var wire 1 k" carry $end
$var wire 1 l" d $end
$var wire 8 m" u [7:0] $end
$var wire 8 n" x [7:0] $end
$var wire 8 o" sum [7:0] $end
$scope begin genblk1[0] $end
$scope module i_multipliter $end
$var wire 1 p" u $end
$var wire 1 q" v $end
$var wire 1 r" x $end
$var wire 1 j" y $end
$var wire 1 s" sum $end
$var wire 1 t" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module i_multipliter $end
$var wire 1 u" u $end
$var wire 1 t" v $end
$var wire 1 v" x $end
$var wire 1 j" y $end
$var wire 1 w" sum $end
$var wire 1 x" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module i_multipliter $end
$var wire 1 y" u $end
$var wire 1 x" v $end
$var wire 1 z" x $end
$var wire 1 j" y $end
$var wire 1 {" sum $end
$var wire 1 |" carry $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module i_multipliter $end
$var wire 1 }" u $end
$var wire 1 |" v $end
$var wire 1 ~" x $end
$var wire 1 j" y $end
$var wire 1 !# sum $end
$var wire 1 "# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module i_multipliter $end
$var wire 1 ## u $end
$var wire 1 "# v $end
$var wire 1 $# x $end
$var wire 1 j" y $end
$var wire 1 %# sum $end
$var wire 1 &# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module i_multipliter $end
$var wire 1 '# u $end
$var wire 1 &# v $end
$var wire 1 (# x $end
$var wire 1 j" y $end
$var wire 1 )# sum $end
$var wire 1 *# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module i_multipliter $end
$var wire 1 +# u $end
$var wire 1 *# v $end
$var wire 1 ,# x $end
$var wire 1 j" y $end
$var wire 1 -# sum $end
$var wire 1 .# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module i_multipliter $end
$var wire 1 /# u $end
$var wire 1 .# v $end
$var wire 1 0# x $end
$var wire 1 j" y $end
$var wire 1 1# sum $end
$var wire 1 2# carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module i_nbit_input $end
$var wire 1 3# b $end
$var wire 1 4# carry $end
$var wire 1 5# d $end
$var wire 8 6# u [7:0] $end
$var wire 8 7# x [7:0] $end
$var wire 8 8# sum [7:0] $end
$scope begin genblk1[0] $end
$scope module i_multipliter $end
$var wire 1 9# u $end
$var wire 1 :# v $end
$var wire 1 ;# x $end
$var wire 1 3# y $end
$var wire 1 <# sum $end
$var wire 1 =# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module i_multipliter $end
$var wire 1 ># u $end
$var wire 1 =# v $end
$var wire 1 ?# x $end
$var wire 1 3# y $end
$var wire 1 @# sum $end
$var wire 1 A# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module i_multipliter $end
$var wire 1 B# u $end
$var wire 1 A# v $end
$var wire 1 C# x $end
$var wire 1 3# y $end
$var wire 1 D# sum $end
$var wire 1 E# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module i_multipliter $end
$var wire 1 F# u $end
$var wire 1 E# v $end
$var wire 1 G# x $end
$var wire 1 3# y $end
$var wire 1 H# sum $end
$var wire 1 I# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module i_multipliter $end
$var wire 1 J# u $end
$var wire 1 I# v $end
$var wire 1 K# x $end
$var wire 1 3# y $end
$var wire 1 L# sum $end
$var wire 1 M# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module i_multipliter $end
$var wire 1 N# u $end
$var wire 1 M# v $end
$var wire 1 O# x $end
$var wire 1 3# y $end
$var wire 1 P# sum $end
$var wire 1 Q# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module i_multipliter $end
$var wire 1 R# u $end
$var wire 1 Q# v $end
$var wire 1 S# x $end
$var wire 1 3# y $end
$var wire 1 T# sum $end
$var wire 1 U# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module i_multipliter $end
$var wire 1 V# u $end
$var wire 1 U# v $end
$var wire 1 W# x $end
$var wire 1 3# y $end
$var wire 1 X# sum $end
$var wire 1 Y# carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module i_nbit_input $end
$var wire 1 Z# b $end
$var wire 1 [# carry $end
$var wire 1 \# d $end
$var wire 8 ]# u [7:0] $end
$var wire 8 ^# x [7:0] $end
$var wire 8 _# sum [7:0] $end
$scope begin genblk1[0] $end
$scope module i_multipliter $end
$var wire 1 `# u $end
$var wire 1 a# v $end
$var wire 1 b# x $end
$var wire 1 Z# y $end
$var wire 1 c# sum $end
$var wire 1 d# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module i_multipliter $end
$var wire 1 e# u $end
$var wire 1 d# v $end
$var wire 1 f# x $end
$var wire 1 Z# y $end
$var wire 1 g# sum $end
$var wire 1 h# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module i_multipliter $end
$var wire 1 i# u $end
$var wire 1 h# v $end
$var wire 1 j# x $end
$var wire 1 Z# y $end
$var wire 1 k# sum $end
$var wire 1 l# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module i_multipliter $end
$var wire 1 m# u $end
$var wire 1 l# v $end
$var wire 1 n# x $end
$var wire 1 Z# y $end
$var wire 1 o# sum $end
$var wire 1 p# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module i_multipliter $end
$var wire 1 q# u $end
$var wire 1 p# v $end
$var wire 1 r# x $end
$var wire 1 Z# y $end
$var wire 1 s# sum $end
$var wire 1 t# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module i_multipliter $end
$var wire 1 u# u $end
$var wire 1 t# v $end
$var wire 1 v# x $end
$var wire 1 Z# y $end
$var wire 1 w# sum $end
$var wire 1 x# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module i_multipliter $end
$var wire 1 y# u $end
$var wire 1 x# v $end
$var wire 1 z# x $end
$var wire 1 Z# y $end
$var wire 1 {# sum $end
$var wire 1 |# carry $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module i_multipliter $end
$var wire 1 }# u $end
$var wire 1 |# v $end
$var wire 1 ~# x $end
$var wire 1 Z# y $end
$var wire 1 !$ sum $end
$var wire 1 "$ carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module i_nbit_input $end
$var wire 1 #$ b $end
$var wire 1 $$ carry $end
$var wire 1 %$ d $end
$var wire 8 &$ u [7:0] $end
$var wire 8 '$ x [7:0] $end
$var wire 8 ($ sum [7:0] $end
$scope begin genblk1[0] $end
$scope module i_multipliter $end
$var wire 1 )$ u $end
$var wire 1 *$ v $end
$var wire 1 +$ x $end
$var wire 1 #$ y $end
$var wire 1 ,$ sum $end
$var wire 1 -$ carry $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module i_multipliter $end
$var wire 1 .$ u $end
$var wire 1 -$ v $end
$var wire 1 /$ x $end
$var wire 1 #$ y $end
$var wire 1 0$ sum $end
$var wire 1 1$ carry $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module i_multipliter $end
$var wire 1 2$ u $end
$var wire 1 1$ v $end
$var wire 1 3$ x $end
$var wire 1 #$ y $end
$var wire 1 4$ sum $end
$var wire 1 5$ carry $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module i_multipliter $end
$var wire 1 6$ u $end
$var wire 1 5$ v $end
$var wire 1 7$ x $end
$var wire 1 #$ y $end
$var wire 1 8$ sum $end
$var wire 1 9$ carry $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module i_multipliter $end
$var wire 1 :$ u $end
$var wire 1 9$ v $end
$var wire 1 ;$ x $end
$var wire 1 #$ y $end
$var wire 1 <$ sum $end
$var wire 1 =$ carry $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module i_multipliter $end
$var wire 1 >$ u $end
$var wire 1 =$ v $end
$var wire 1 ?$ x $end
$var wire 1 #$ y $end
$var wire 1 @$ sum $end
$var wire 1 A$ carry $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module i_multipliter $end
$var wire 1 B$ u $end
$var wire 1 A$ v $end
$var wire 1 C$ x $end
$var wire 1 #$ y $end
$var wire 1 D$ sum $end
$var wire 1 E$ carry $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module i_multipliter $end
$var wire 1 F$ u $end
$var wire 1 E$ v $end
$var wire 1 G$ x $end
$var wire 1 #$ y $end
$var wire 1 H$ sum $end
$var wire 1 I$ carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk2[2] $end
$upscope $end
$scope begin genblk2[3] $end
$upscope $end
$scope begin genblk2[4] $end
$upscope $end
$scope begin genblk2[5] $end
$upscope $end
$scope begin genblk2[6] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
bx ($
bx '$
bx &$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
bx _#
bx ^#
bx ]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
bx 8#
bx 7#
bx 6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
bx o"
bx n"
bx m"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
bx H"
bx G"
bx F"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
bx !"
bx ~
bx }
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
bx X
bx W
bx V
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
bx 1
bx 0
bx /
x.
x-
x,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
x"
bx !
$end
#10
0H$
0"
0$$
0I$
0D$
0E$
1@$
0A$
0B$
0<$
0=$
0F$
08$
09$
0:$
1>$
0!$
0[#
0"$
04$
05$
1{#
0|#
00$
01$
02$
06$
0w#
0x#
1y#
b100000 ($
0,$
0-$
0s#
0t#
0}#
0)$
0.$
0o#
0p#
0q#
0u#
1X#
04#
0Y#
b100000 &$
0k#
0l#
0T#
1U#
0g#
0h#
0i#
0m#
0P#
1Q#
0R#
b1000001 _#
1c#
0d#
0L#
1M#
0V#
0`#
0e#
0H#
1I#
1J#
0N#
01#
0k"
02#
b1000000 ]#
0D#
1E#
0-#
0.#
0@#
1A#
0B#
1F#
1)#
0*#
0+#
b10000000 8#
0<#
1=#
1%#
0&#
0/#
19#
1>#
0!#
0"#
1##
1'#
0h"
0D"
0i"
b11011 6#
1{"
0|"
1d"
0e"
1w"
0x"
1y"
0}"
1`"
0a"
0b"
b110111 o"
1s"
0t"
0\"
0]"
0f"
0p"
1u"
1X"
0Y"
0Z"
0^"
0A"
0{
0B"
b110110 m"
1T"
1U"
0="
0>"
0P"
1Q"
1R"
0V"
09"
0:"
0;"
b1101100 H"
0L"
1M"
05"
06"
0?"
1I"
1N"
11"
02"
03"
07"
0x
0T
0y
b111 F"
1-"
0."
0t
0u
1)"
0*"
1+"
1/"
0p
0q
0r
b1111 !"
1%"
0&"
1l
0m
0v
1""
1'"
1h
0i
1j
0n
0Q
0-
0R
b1111 }
1d
0e
0M
0N
1`
0a
1b
1f
1I
0J
b11110 X
0\
0]
1E
0F
0Y
1^
1A
0B
b11110 V
1=
0>
b1000001010100 !
b1000001010100 +
09
0:
b111100 1
05
06
02
07
1;
1?
1C
1G
0K
0O
03
0.
0Z
0U
0#"
0|
1J"
1E"
1q"
1l"
1:#
15#
1a#
1\#
0*$
0%$
b111100 /
0,
0S
0z
1C"
0j"
13#
0Z#
0#$
04
08
1<
0@
0D
1H
1L
0P
0[
0_
1c
0g
0k
1o
1s
0w
0$"
0("
1,"
00"
04"
18"
1<"
0@"
0K"
0O"
1S"
0W"
0["
1_"
1c"
0g"
0r"
0v"
1z"
0~"
0$#
1(#
1,#
00#
0;#
0?#
1C#
0G#
0K#
1O#
1S#
0W#
0b#
0f#
1j#
0n#
0r#
1v#
1z#
0~#
0+$
0/$
13$
07$
0;$
1?$
1C$
0G$
b1111000 $
b1111000 '
b111100 %
b111100 (
b101000 #
b101000 *
b1100100 &
b1100100 )
b1100100 0
b1100100 W
b1100100 ~
b1100100 G"
b1100100 n"
b1100100 7#
b1100100 ^#
b1100100 '$
#110
